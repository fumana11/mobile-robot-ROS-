pid_gains:
  left_front_wheel_joint: {p: 0.5, i: 1.0, d: 0.5}
  right_front_wheel_joint: {p: 0.5, i: 1.0, d: 0.5}
  left_rear_wheel_joint: {p: 0.5, i: 1.0, d: 0.5}
  right_rear_wheel_joint: {p: 0.5, i: 1.0, d: 0.5}

robot_joint_publisher:
  type: "joint_state_controller/JointStateController"
  publish_rate: 20

trainer_robot:
  type: "diff_drive_controller/DiffDriveController"
  left_wheel: ['left_front_wheel_joint', 'left_rear_wheel_joint']
  right_wheel: ['right_front_wheel_joint', 'right_rear_wheel_joint']
  publish_rate: 10

  # Odometry covariances for the encoder output of the robot. These values should
  # be tuned to your robot's sample odometry data, but these values are a good place
  # to start
  pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
  twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

  cmd_vel_timeout: 0.1
  base_frame_id: base_link
  odom_frame_id: odom

  k_l: 1.0
  k_r: 1.0

  enable_odom_tf: true

  allow_multiple_cmd_vel_publishers: true

  wheel_separation: 0.08
  wheel_radius: 0.04

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.0 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 1.0   # m/s
      has_acceleration_limits: true
      max_acceleration       : 1.0   # m/s^2
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 2.0   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 2.0   # rad/s^2